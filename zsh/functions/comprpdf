local quality
local output
local list

quality="default"
list=("default" "screen" "ebook" "printer" "prepress")

if [[ $# -eq 0 ]]; then
    cat >&2 <<EOF
Usage:
    $0 -l
    $0 [-q <quality>] -o <output_file> <input_file>
EOF
    return 1
fi

while getopts ":lq::o:" optname; do
    case $optname in
        l) echo "default, screen, ebook, printer, prepress"; return 0;;
        q) quality=$OPTARG;;
        o) output=$OPTARG;;
        :) echo "Missing option argument for -$OPTARG" >&2; return 1;;
        *) echo "Unknown option" >&2; return 1;;
    esac
done
shift $((OPTIND-1))
unset optname

if [[ ${list[(i)$quality]} -gt ${#list} ]]; then
    cat >&2 <<EOF
Unknown option argument for -q
Use $0 -l to see supported arguments
EOF
    return 1
fi

if [[ -z "$output" ]]; then
    print "$0: missing option -o <output_file>" >&2
    return 1
fi

if [[ ! -s "$1" ]]; then
    print "$0: file not valid: $1" >&2
    return 1
fi

gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 \
    -dPDFSETTINGS=/"$quality" -dNOPAUSE -dQUIET \
    -dBATCH -sOutputFile="$output" "$1"

# vim: ft=zsh et ts=4 sts=4 sw=4
