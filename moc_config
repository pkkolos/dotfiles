# Show file titles (title, author, album) instead of file names?
ReadTags = yes

# In which directory do you store your music files?  If you specify it you will
# be able to jump straight to this directory with the '-m' parameter or the 'm'
# command.  This can also point to a playlist.
MusicDir = "${HOME}/Music"

# Start in the music directory by default?  If set to 'no', start in the current
# directory by default.
StartInMusicDir = no

# Set playback toggles.
Repeat = no
Shuffle = no
AutoNext = yes

# Default FormatString:
#   %n - Track number
#   %a - Artist
#   %A - Album
#   %t - Title
#   %(X:TRUE:FALSE)
FormatString = "%(n:%n. :)%(a:%a - :)%(t:%t:)"

# Show files with dot at the beginning?
ShowHiddenFiles = no

# Hide file name extensions?
HideFileExtension = no

# Show file format in menu?
#ShowFormat = yes

# Show file time in menu?  Possible values: 'yes', 'no' and 'IfAvailable'
# (meaning show the time only when it is already known, which often works
# faster).
ShowTime = yes

# Show time played as a percentage in the time progress bar.
ShowTimePercent = yes

# Theme file to use.  This can be absolute path or relative to
# /usr/share/moc/themes/ (depends on installation prefix) or
# ~/.moc/themes/ .
#
# Example:    Theme = laras_theme
#
Theme = base16

# The theme used when running on an xterm.
#
# Example:    XTermTheme = transparent-background
#
#XTermTheme =

# MOC directory (where pid file, socket and state files are stored).
# You can use ~ at the beginning.
#MOCDir = ~/.moc

# Use MIME to identify audio files.  This can make for slower loading
# of playlists but is more accurate than using "extensions".
#UseMimeMagic = no

# Remember the playlist after exit?
#SavePlaylist = yes

# When using more than one client (interface) at a time, do they share
# the playlist?
#SyncPlaylist = yes

# Choose a keymap file (relative to '~/.moc/' or using an absolute path).
# An annotated example keymap file is included ('keymap.example').
#
# Example:    Keymap = my_keymap
#
#Keymap = keymap

# Use ASCII rather than graphic characters for drawing lines.  This
# helps on some terminals.
#ASCIILines = no

# FastDirs, these allow you to jump directly to a directory.
Fastdir1 = "${HOME}/Downloads/music"

# PreferredDecoders allows you to specify which decoder should be used
# for any given audio format.  It is a colon-separated list in which
# each entry is of the general form 'code(decoders)', where 'code'
# identifies the audio format and 'decoders' is a comma-separated list
# of decoders in order of preference.
#
# The audio format identifier may be either a filename extension or a
# MIME media type.  If the latter, the format is 'type/subtype' (e.g.,
# 'audio/flac').  Because different systems may give different MIME
# media types, any 'x-' prefix of the subtype is ignored both here and
# in the actual file MIME type (so all combinations of 'audio/flac' and
# 'audio/x-flac' match each other).
#
# For Internet streams the matching is done on MIME media type and on
# actual content.  For files the matches are made on MIME media type
# (if the 'UseMimeMagic' option is set) and on filename extension.  The
# MIME media type of a file is not determined until the first entry for
# MIME is encountered in the list.
#
# The matching is done in the order of appearance in the list with any
# entries added from the command line being matched before those listed
# here.  Therefore, if you place all filename extension entries before
# all MIME entries you will speed up MOC's processing of directories
# (which could be significant for remote file systems).
#
# The decoder list may be empty, in which case no decoders will be used
# for files (and files with that audio format ignored) while Internet
# streams will be assessed on the actual content.  Any decoder position
# may contain an asterisk, in which case any decoder not otherwise listed
# which can handle the audio format will be used.  It is not an error to
# list the same decoder twice, but neither does it make sense to do so.
#
# If you have a mix of audio and non-audio files in your directories, you
# may wish to include entries at top of the list which ignore non-audio
# files by extension.
#
# In summary, the PreferredDecoders option provides fine control over the
# type of matching which is performed (filename extension, MIME media
# type and streamed media content) and which decoder(s) (if any) are used
# based on the option's list entries and their ordering.
#
# Examples:   aac(aac,ffmpeg)             first try FAAD2 for AACs then FFmpeg
#             mp3()                       ignore MP3 files
#             wav(*,sndfile)              use sndfile for WAV as a last resort
#             ogg(vorbis,*):flac(flac,*)  try Xiph decoders first
#             ogg():audio/ogg()           ignore OGG files, and
#                                         force Internet selection by content
#             gz():html()                 ignore some non-audio files
#
# Any unspecified audio formats default to trying all decoders.
# Any unknown (or misspelt) drivers are ignored.
# All names are case insensitive.
# The default setting reflects the historical situation modified by
# the experience of users.
#
#PreferredDecoders  = aac(aac,ffmpeg):m4a(ffmpeg)
#PreferredDecoders += mpc(musepack,*,ffmpeg):mpc8(musepack,*,ffmpeg)
#PreferredDecoders += sid(sidplay2):mus(sidplay2)
#PreferredDecoders += wav(sndfile,*,ffmpeg)
#PreferredDecoders += wv(wavpack,*,ffmpeg)
#PreferredDecoders += audio/aac(aac):audio/aacp(aac):audio/m4a(ffmpeg)
#PreferredDecoders += audio/wav(sndfile,*)

# The following PreferredDecoders attempt to handle the ambiguity surrounding
# container types such as OGG for files.  The first two entries will force
# a local file to the correct decoder (assuming the .ogg file contains Vorbis
# audio), while the MIME media types will cause Internet audio streams to
# be assessed on content (which may be either Vorbis or Speex).
#
#PreferredDecoders += ogg(vorbis,ffmpeg):oga(vorbis,ffmpeg):ogv(ffmpeg)
#PreferredDecoders += opus(opus,ffmpeg)
#PreferredDecoders += spx(speex)
#PreferredDecoders += application/ogg(vorbis):audio/ogg(vorbis)

# Number items in the playlist.
PlaylistNumbering = no

# Main window layouts.
Layout1 = directory(0,0,50%,100%):playlist(50%,0,FILL,100%)
Layout2 = directory(0,0,100%,100%)
Layout3 = directory(0,0,100%,90%):playlist(0,90%,100%,10%)

# When the song changes, should the menu be scrolled so that the currently
# played file is visible?
FollowPlayedFile = yes

# What to do if the interface was started and the server is already playing
# something from the playlist?  If CanStartInPlaylist is set to 'yes', the
# interface will switch to the playlist.  When set to 'no' it will start
# from the last directory.
CanStartInPlaylist = yes

# Set the terminal title when running under xterm.
SetXtermTitle = yes

# Set the terminal title when running under screen.
SetScreenTitle = yes

# Display full paths instead of just file names in the playlist.
PlaylistFullPaths = no
